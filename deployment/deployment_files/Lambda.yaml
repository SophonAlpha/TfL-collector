
AWSTemplateFormatVersion: "2010-09-09"

Parameters:

  DeploymentS3Bucket:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /Collector/deployment/S3bucket
  DeploymentS3Prefix:
    Type: String
    Default: deployment/

Resources:

  LambdaRole:
    Type: "AWS::IAM::Role"
    Properties:
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - "lambda.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Policies:
        - PolicyName: 'ParameterStoreAccess'
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - 'ssm:GetParameter*'
                Resource: !Sub 'arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/Collector/parameters*'

  CollectorFunction:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: !Ref DeploymentS3Bucket
        S3Key: !Sub "${DeploymentS3Prefix}lambda_collector.zip"
      Description: collector lambda function
      FunctionName: collector
      Handler: collector.main
      MemorySize: 128
      Role: !GetAtt LambdaRole.Arn
      Runtime: python3.8
      Timeout: 60
      Layers:
        - !Ref InfluxDBLayer
        - !Ref PyYamlLayer
      Environment:
        Variables:
          SSMParameterStorePath: '/Collector/parameters'

  InfluxDBLayer:
    Type: AWS::Lambda::LayerVersion
    Properties:
      CompatibleRuntimes:
        - python3.8
      Content:
        S3Bucket: !Ref DeploymentS3Bucket
        S3Key: !Sub "${DeploymentS3Prefix}layer_influxdb.zip"
      Description: InfluxDB Python library
      LayerName: InfluxDB

  PyYamlLayer:
    Type: AWS::Lambda::LayerVersion
    Properties:
      CompatibleRuntimes:
        - python3.8
      Content:
        S3Bucket: !Ref DeploymentS3Bucket
        S3Key: !Sub "${DeploymentS3Prefix}layer_pyyaml.zip"
      Description: PyYaml Python library
      LayerName: PyYaml

  LogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/lambda/${CollectorFunction}"
      RetentionInDays: 90

  TimerTriggerLambda:
    Type: AWS::Events::Rule
    Properties:
      Description: Timed trigger for starting collector Lambda function
      ScheduleExpression: rate(10 minutes)
      State: ENABLED
      Targets:
        - Arn: !GetAtt CollectorFunction.Arn
          Id: CollectorFunction

  PermissionInvokeLambda:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref CollectorFunction
      Action: lambda:InvokeFunction
      Principal: events.amazonaws.com
      SourceArn: !GetAtt TimerTriggerLambda.Arn
